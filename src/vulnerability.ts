import {notBlank} from './utils'

export class VulnerabilityId {
  id: string

  constructor(str: string) {
    this.id = str
  }

  toString(): string {
    return this.id
  }
}

export class CveId extends VulnerabilityId {
  constructor(str: string) {
    super(str.toUpperCase())
  }

  static scanner(this: void, text: string): string[] {
    const regex = /CVE-\d{4}-\d+/gi

    return (String(text).match(regex) || []).filter(notBlank)
  }
}

export class GhsaId extends VulnerabilityId {
  static scanner(this: void, text: string): string[] {
    const regex = /GHSA-\w{4}-\w{4}-\w{4}/gi

    return (String(text).match(regex) || []).filter(notBlank)
  }
}

export function findMentionedVulnerabilities(
  fields: string[]
): VulnerabilityId[] {
  const vulnTypes = [CveId, GhsaId]

  return vulnTypes.flatMap(vulnType =>
    [...new Set(fields.flatMap(vulnType.scanner))].map(id => new vulnType(id))
  )
}
